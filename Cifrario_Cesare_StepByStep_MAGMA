text:="luke skywalker tornato al suo remoto pianeta natale tatooine";
// print text;
ElementToSequence(text);                                                        // mette le stringe in sequenza
E:=ElementToSequence(text);                           // Parent(E);             // E è la mia sequeza di singoli caratteri
// BString(text);                                                                  // Converto ogni carattere nel suo numero in base al sistema UNIX
L:=BString(text);                                     // Parent(L);             // L è la mia Lista contenete i caratteri
V:=Eltseq(L); // V;  // stampo V se voglio vederlo    // Parent(V);             // creo V come sequenza di interi a partire da L
KEY:=4;                                               // Parent(KEY);           // assegno valore alla chiave per shiftare

// CODIFICA
N := [a+KEY : a in V];                                                          // creo N vettore con i nuovi interi aggiorneti con sommato il valore della key
print "il messaggio cifrato in numeri è: \n" , N;     // Parent(N);             // stampo N
C:=[CodeToString(c) : c in N];                                                  // converto in stringhe i numeri

// STAMPA MESSAGGIO CODIFICATO
print "il messaggio cifrato in lettere è: \n" , C;                              // stampo C

// DECODIFICA
D:=[BString(d) : d in SequenceToList(C)];                                       // converto la stringa C in numeri
EE:=ElementToSequence(D);                                                       // la trasformo in una sequenza di singoli caratteri
VV:=Eltseq(EE);                                                                 // creo VV cosi che sia un vettore
MEX_D := &cat VV;                                                               // creo un array con i valori trovati
MEX_D_Vett:=Eltseq(MEX_D);                                                      // uso un vettore seq numerico
BF:=[KEY];                                                                      // parametri di shift per la key

for u in BF do                                                                  // inizio ciclo brutte_force
  MEX_DD:=[v-u : v in MEX_D_Vett];                                              // rimuovo i valori della key
  print "\n";                                                                   // stampa di layout
  print "Stringa numerica:      \n" , MEX_DD;                                   // stampa vettore numerico
  print "\n";                                                                   // stampa di layout
  for r in MEX_DD do                                                            // ciclo for decodifica
    Mex_Decodificato:=[CodeToString(r) : r in MEX_DD];                          // per ogni r indice di un numero in MEX_DD converti il num in stringa
  end for;                                                                      // fine ciclo conversione
  print "Messaggio decodificato: \n" , Mex_Decodificato;                        // stampa msg decodificato
  print " \n";                                                                  // stampe layout
end for;                                                                        // stampe layout
